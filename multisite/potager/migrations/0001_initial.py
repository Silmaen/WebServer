# Generated by Django 3.1.3 on 2021-02-02 15:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import markdownx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plantation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Semis', models.DateField(blank=True, verbose_name='Date du semi sous abri')),
                ('SemisTerre', models.DateField(blank=True, verbose_name='Date du semi en pleine terre')),
                ('Harvested', models.DateField(blank=True, verbose_name='Date de la récolte')),
                ('CoordX', models.PositiveIntegerField(default=0, verbose_name='Placement en X')),
                ('CoordY', models.PositiveIntegerField(default=0, verbose_name='Placement en Y')),
                ('Commentaires', markdownx.models.MarkdownxField(blank=True, default='', verbose_name='Commentaires de cette plantation au format Markdown')),
            ],
        ),
        migrations.CreateModel(
            name='PlantType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Nom de variété')),
                ('vendeur', models.CharField(max_length=60, verbose_name='Nom du vendeur')),
                ('icon', models.CharField(blank=True, default='', max_length=30, verbose_name="nom de l'icône")),
                ('semis_abris', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Mois de semis sous abris')),
                ('semis_terre', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Mois de semis en pleine terre')),
                ('harvest', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Mois de récolte')),
                ('description', markdownx.models.MarkdownxField(blank=True, default='', verbose_name='Description de la variété au format Markdown')),
            ],
        ),
        migrations.CreateModel(
            name='PlantTypeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', markdownx.models.MarkdownxField(blank=True, default='', verbose_name='Contenu du commentaire au format Markdown')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de parution')),
                ('active', models.BooleanField(default=False)),
                ('auteur', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Auteur du commentaire')),
                ('type_plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='potager.planttype', verbose_name='Plant lié')),
            ],
            options={
                'verbose_name': 'Commentaire de plant',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PlantationComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', markdownx.models.MarkdownxField(blank=True, default='', verbose_name='Contenu du commentaire au format Markdown')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de parution')),
                ('active', models.BooleanField(default=False)),
                ('auteur', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Auteur du commentaire')),
                ('plantation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='potager.plantation', verbose_name='Plantation lié')),
            ],
            options={
                'verbose_name': 'Commentaire de plant',
                'ordering': ['-date'],
            },
        ),
    ]
